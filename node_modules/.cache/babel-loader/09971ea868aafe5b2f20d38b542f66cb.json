{"ast":null,"code":"var _jsxFileName = \"/Users/logee/Desktop/fms/src/AdminLogin.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Login.css\";\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\"; // import {Link,Routes, BrowserRouter as Router,Route} from \"react-router-dom\";\n// import AdminLogin from \"./AdminLogin\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminLogin() {\n  _s();\n\n  //Form Validation\n  // const initialValues = {email : \"\",password : \"\"};\n  // const [formValues, setFormValues] = useState(initialValues);\n  // const [formErrors, setFormErrors] = useState({});\n  // const [isSubmit,setIsSubmit] = useState(false);\n  // const handleChange = function(e){\n  //     const {name,value} = e.target;\n  //     setFormValues({...formValues,[name]:value});\n  // };\n  // const handleSubmit = function(e){\n  //     e.preventDefault();\n  //     setFormErrors(validate(formValues));\n  //     setIsSubmit(true);\n  // }\n  // const validate = function(values){\n  //     const errors = {};\n  //     const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n  //     if(!values.email){\n  //         errors.email = \"Email is required\";\n  //     }else if(!regex.test(values.email)){\n  //         errors.email = \"Enter a valid email\"\n  //     }\n  //     if(!values.password){\n  //         errors.password = \"Passwrod is required\";\n  //     }else if(values.password.length < 4){\n  //         errors.password = \"Password should be more than 4 characters\"\n  //     }else if(values.password.length > 15){\n  //         errors.password = \"Password cannot exceed more than 15 characters\"\n  //     }\n  //     return errors;\n  // }\n  // useEffect(()=>{\n  //     if(Object.keys(formErrors).length===0&&isSubmit){\n  //         console.log(formValues);    \n  //     }\n  // },[formErrors]);\n  // Authentication\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleEmail = function (e) {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = function (e) {\n    setPassword(e.target.value);\n  };\n\n  async function loginAdmin(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:3001/api/adminLogin/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    console.log(response);\n    const data = await response.json();\n\n    try {\n      if (data.admin) {\n        localStorage.setItem(\"token\", data.admin);\n        window.location.href = \"./CustomerDashboard\";\n      } else {\n        console.log(\"Invalid Credentials\");\n        toast.error(\"Login failed\");\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    console.log(\"Hello\");\n    console.log(data);\n  }\n\n  const navigate = useNavigate();\n\n  const handleOnClickLink = () => {\n    navigate(\"/Login\");\n  }; // async function registerAdmin(event){\n  //     event.preventDefault();\n  //     const response  = await fetch('http://localhost:3001/api/adminRegister/',{\n  //         method:'POST',\n  //         headers:{\n  //             'Content-Type' : 'application/json',\n  //         },\n  //         body : JSON.stringify({\n  //             email,\n  //             password,\n  //         }),\n  //     })\n  //     const data = await response.json();\n  //     console.log(data);\n  //     if(data.status===\"ok\"){\n  //         // navigate(\"/Login\");\n  //         toast.success(\"Registered Successfully\");\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header\",\n        id: \"loginTitle\",\n        children: [\"ADMINISTRATOR LOGIN \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"l1\",\n            children: \"KRISHNA \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 78\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"l2\",\n            children: \"FINANCE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitButton\",\n        onClick: registerAdmin,\n        children: \"Reigster Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"form\",\n          onSubmit: loginAdmin,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            className: \"inputField\",\n            onChange: handleEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            className: \"inputField\",\n            onChange: handlePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submitButton\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"link\",\n            onClick: handleOnClickLink,\n            children: \"Login as Customer?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminLogin, \"EboXlVbFx3d+WdD8l5e3FEv7LQ0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AdminLogin;\nexport default AdminLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","toast","useNavigate","AdminLogin","email","setEmail","password","setPassword","handleEmail","e","target","value","handlePassword","loginAdmin","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","console","log","data","json","admin","localStorage","setItem","window","location","href","error","navigate","handleOnClickLink","registerAdmin"],"sources":["/Users/logee/Desktop/fms/src/AdminLogin.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./Login.css\";\nimport {useState} from \"react\";\nimport {toast} from \"react-toastify\";\nimport {useNavigate} from \"react-router-dom\";\n// import {Link,Routes, BrowserRouter as Router,Route} from \"react-router-dom\";\n// import AdminLogin from \"./AdminLogin\";\nfunction AdminLogin(){\n    //Form Validation\n\n    // const initialValues = {email : \"\",password : \"\"};\n    // const [formValues, setFormValues] = useState(initialValues);\n    // const [formErrors, setFormErrors] = useState({});\n    // const [isSubmit,setIsSubmit] = useState(false);\n\n    // const handleChange = function(e){\n    //     const {name,value} = e.target;\n    //     setFormValues({...formValues,[name]:value});\n    // };\n    // const handleSubmit = function(e){\n    //     e.preventDefault();\n    //     setFormErrors(validate(formValues));\n    //     setIsSubmit(true);\n    // }\n    // const validate = function(values){\n    //     const errors = {};\n    //     const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    //     if(!values.email){\n    //         errors.email = \"Email is required\";\n    //     }else if(!regex.test(values.email)){\n    //         errors.email = \"Enter a valid email\"\n    //     }\n    //     if(!values.password){\n    //         errors.password = \"Passwrod is required\";\n    //     }else if(values.password.length < 4){\n    //         errors.password = \"Password should be more than 4 characters\"\n    //     }else if(values.password.length > 15){\n    //         errors.password = \"Password cannot exceed more than 15 characters\"\n    //     }\n    //     return errors;\n    // }\n    // useEffect(()=>{\n    //     if(Object.keys(formErrors).length===0&&isSubmit){\n    //         console.log(formValues);    \n    //     }\n    // },[formErrors]);\n\n\n    // Authentication\n\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n\n    const handleEmail = function(e){\n        setEmail(e.target.value);\n    }\n    const handlePassword = function(e){\n        setPassword(e.target.value);\n    }\n    async function loginAdmin(event){\n        event.preventDefault();\n        const response  = await fetch('http://localhost:3001/api/adminLogin/',{\n            method:'POST',\n            headers:{\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                email,\n                password,\n            }),\n        })\n        console.log(response);\n        const data = await response.json();\n        try{\n            if(data.admin){\n                localStorage.setItem(\"token\",data.admin);\n                window.location.href = \"./CustomerDashboard\"; \n            }else{\n                console.log(\"Invalid Credentials\");\n                toast.error(\"Login failed\");\n            }\n        }\n        catch(e){\n            console.error(e);\n        }\n        console.log(\"Hello\")\n        console.log(data);\n    }\n    const navigate = useNavigate();\n    const handleOnClickLink = () =>{  \n        navigate(\"/Login\");\n    }\n    // async function registerAdmin(event){\n    //     event.preventDefault();\n    //     const response  = await fetch('http://localhost:3001/api/adminRegister/',{\n    //         method:'POST',\n    //         headers:{\n    //             'Content-Type' : 'application/json',\n    //         },\n    //         body : JSON.stringify({\n    //             email,\n    //             password,\n    //         }),\n    //     })\n    //     const data = await response.json();\n    //     console.log(data);\n        \n    //     if(data.status===\"ok\"){\n    //         // navigate(\"/Login\");\n    //         toast.success(\"Registered Successfully\");\n    //     }\n    // }\n    return(\n        <div className=\"Login\">\n            <div className=\"formContainer\">\n            <h1 className=\"header\" id=\"loginTitle\">ADMINISTRATOR LOGIN <span><span id=\"l1\" >KRISHNA </span>\n                <span id=\"l2\">FINANCE</span></span></h1>\n                <button className=\"submitButton\" onClick={registerAdmin}>Reigster Admin</button>\n            <div className=\"form\">\n            <br />\n            <form id=\"form\" onSubmit={loginAdmin}>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" className=\"inputField\" \n                 onChange={handleEmail}/>\n                {/* <p className=\"errorMessage\">{formErrors.email}</p> */}\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"inputField\" \n                 onChange={handlePassword}/>\n                {/* <p className=\"errorMessage\">{formErrors.password}</p> */}\n                <button className=\"submitButton\">Login</button>\n                {/* <button class=\"submitButton\">Login as admin</button> */}   \n                <p className=\"link\" onClick={handleOnClickLink}>Login as Customer?</p>\n            </form>\n            </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AdminLogin;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}