[{"/Users/logee/Documents/Codes/fms/src/index.js":"1","/Users/logee/Documents/Codes/fms/src/App.js":"2","/Users/logee/Documents/Codes/fms/src/reportWebVitals.js":"3","/Users/logee/Documents/Codes/fms/src/Home.jsx":"4","/Users/logee/Documents/Codes/fms/src/Login.jsx":"5","/Users/logee/Documents/Codes/fms/src/About.jsx":"6","/Users/logee/Documents/Codes/fms/src/Register.jsx":"7","/Users/logee/Desktop/fms/src/index.js":"8","/Users/logee/Desktop/fms/src/App.js":"9","/Users/logee/Desktop/fms/src/reportWebVitals.js":"10","/Users/logee/Desktop/fms/src/Home.jsx":"11","/Users/logee/Desktop/fms/src/About.jsx":"12","/Users/logee/Desktop/fms/src/Register.jsx":"13","/Users/logee/Desktop/fms/src/CustomerDashboard.jsx":"14","/Users/logee/Desktop/fms/src/Login.jsx":"15","/Users/logee/Desktop/fms/src/AdminLogin.jsx":"16","/Users/logee/Desktop/fms/src/Records.jsx":"17"},{"size":492,"mtime":1654784221008,"results":"18","hashOfConfig":"19"},{"size":1295,"mtime":1654783477551,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1653482995529,"results":"21","hashOfConfig":"19"},{"size":2230,"mtime":1654877716235,"results":"22","hashOfConfig":"19"},{"size":2630,"mtime":1654971111977,"results":"23","hashOfConfig":"19"},{"size":918,"mtime":1654870553309,"results":"24","hashOfConfig":"19"},{"size":5004,"mtime":1655122007248,"results":"25","hashOfConfig":"19"},{"size":492,"mtime":1658477232956,"results":"26","hashOfConfig":"27"},{"size":1661,"mtime":1658421067116,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1655347431614,"results":"29","hashOfConfig":"27"},{"size":2235,"mtime":1658476733045,"results":"30","hashOfConfig":"27"},{"size":918,"mtime":1655347431553,"results":"31","hashOfConfig":"27"},{"size":5232,"mtime":1658420808210,"results":"32","hashOfConfig":"27"},{"size":9243,"mtime":1658425832162,"results":"33","hashOfConfig":"27"},{"size":3978,"mtime":1657943297774,"results":"34","hashOfConfig":"27"},{"size":0,"mtime":1655347431554,"results":"35","hashOfConfig":"27"},{"size":2072,"mtime":1658477663617,"results":"36","hashOfConfig":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1s8f6sr",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vhl5is",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/logee/Documents/Codes/fms/src/index.js",[],[],[],"/Users/logee/Documents/Codes/fms/src/App.js",[],[],"/Users/logee/Documents/Codes/fms/src/reportWebVitals.js",[],[],"/Users/logee/Documents/Codes/fms/src/Home.jsx",[],[],"/Users/logee/Documents/Codes/fms/src/Login.jsx",["85"],[],"import React from \"react\";\nimport \"./Login.css\";\nimport {useState,useEffect} from \"react\";\nfunction Login(){\n    const initialValues = {email : \"\",password : \"\"};\n    const [formValues, setFormValues] = useState(initialValues);\n    const [formErrors, setFormErrors] = useState({});\n    const [isSubmit,setIsSubmit] = useState(false);\n\n    const handleChange = function(e){\n        const {name,value} = e.target;\n        setFormValues({...formValues,[name]:value});\n    };\n    const handleSubmit = function(e){\n        e.preventDefault();\n        setFormErrors(validate(formValues));\n        setIsSubmit(true);\n    }\n    const validate = function(values){\n        const errors = {};\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n        if(!values.email){\n            errors.email = \"Email is required\";\n        }else if(!regex.test(values.email)){\n            errors.email = \"Enter a valid email\"\n        }\n        if(!values.password){\n            errors.password = \"Passwrod is required\";\n        }else if(values.password.length < 4){\n            errors.password = \"Password should be more than 4 characters\"\n        }else if(values.password.length > 15){\n            errors.password = \"Password cannot exceed more than 15 characters\"\n        }\n        return errors;\n    }\n    useEffect(()=>{\n        if(Object.keys(formErrors).length===0&&isSubmit){\n            console.log(formValues);    \n        }\n    },[formErrors]);\n    return(\n        <div className=\"Login\">\n            <div className=\"formContainer\">\n            <h1 className=\"header\" id=\"loginTitle\">CUSTOMER LOGIN <span><span id=\"l1\" >KRISHNA </span>\n                <span id=\"l2\">FINANCE</span></span></h1>\n            <div className=\"form\">\n            <br />\n            <form id=\"form\" onSubmit={handleSubmit}>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" className=\"inputField\" value={formValues.email} onChange={handleChange}/>\n                <p className=\"errorMessage\">{formErrors.email}</p>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"inputField\" value={formValues.password} onChange={handleChange}/>\n                <p className=\"errorMessage\">{formErrors.password}</p>\n                <button className=\"submitButton\">Login</button>\n                {/* <button class=\"submitButton\">Login as admin</button> */}    \n                <p><a href=\"/Users/logee/Documents/Codes/miniProject/finance-system/adminLogin.html\" className=\"link\">Login as admin?</a></p>\n            </form>\n            </div>\n            </div>\n        </div>\n       \n    );\n}\n\n\n\nexport default Login;\n\n\n","/Users/logee/Documents/Codes/fms/src/About.jsx",[],[],"/Users/logee/Documents/Codes/fms/src/Register.jsx",["86","87"],[],"import \"./Login.css\";\nimport {useState,useEffect} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nfunction Register(){\n    //Form Validation\n    // const initialValues = {name : \"\",email : \"\",password : \"\"};\n    // const [formValues, setFormValues] = useState(initialValues);\n    // const [formErrors, setFormErrors] = useState({});\n    // const [isSubmit,setIsSubmit] = useState(false);\n\n    // const handleChange = function(e){\n    //     const {name,value} = e.target;\n    //     setFormValues({...formValues,[name]:value});\n    // };\n    // const handleSubmit = function(e){\n    //     e.preventDefault();\n    //     setFormErrors(validate(formValues));\n    //     setIsSubmit(true);\n    // }\n    // const validate = function(values){\n    //     const errors = {};\n    //     const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    //     if(!values.name){\n    //         errors.name = \"Name is required\";\n    //     }\n    //     if(!values.email){\n    //         errors.email = \"Email is required\";\n    //     }else if(!regex.test(values.email)){\n    //         errors.email = \"Enter a valid email\"\n    //     }\n    //     if(!values.password){\n    //         errors.password = \"Passwrod is required\";\n    //     }else if(values.password.length < 4){\n    //         errors.password = \"Password should be more than 4 characters\"\n    //     }else if(values.password.length > 15){\n    //         errors.password = \"Password cannot exceed more than 15 characters\"\n    //     }\n    //     return errors;\n    // }\n    // useEffect(()=>{\n    //     if(Object.keys(formErrors).length===0&&isSubmit){\n    //         console.log(formValues);    \n    //     }\n    // },[formErrors]);\n    \n    //Authentication \n    const [name,setName ] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n\n    const handleName = (e)=>{\n        setName(e.target.value);\n    }\n    const handleEmail = function(e){\n        setEmail(e.target.value);\n    }\n    const handlePassword = function(e){\n        setPassword(e.target.value);\n    }\n    async function registerUser(event){\n        event.preventDefault();\n        const response  = await fetch('http://localhost:3001/api/register/',{\n            method:'POST',\n            headers:{\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                name,\n                email,\n                password,\n            }),\n        })\n        const data = await response.json();\n        console.log(data);\n    }\n\n    // const twoCallsName = e => {\n    //     this.handleChange(e);\n    //     this.handleName(e);\n    // }\n\n    // const twoCallsEmail = e => {\n    //     this.handleChange(e);\n    //     this.handleEmail(e);\n    // }\n\n    // const twoCallsPassword = e =>{\n    //     this.handleChange(e);\n    //     this.handlePassword(e);\n    // }\n\n    // const twoCallsSubmit = e =>{\n    //     this.handleSubmit(e);\n    //     this.registerUser(e);\n    // }\n\n\n\n    return(\n        <div className=\"Register\">\n                <div className=\"formContainer\">\n                <h1 className=\"header\" id=\"loginTitle\">REGISTER \n                    <span><span id=\"l1\" >KRISHNA </span>\n                <span id=\"l2\">FINANCE</span></span> </h1>\n                <div className=\"form\">\n                    <br />\n                    <form id=\"form\" onSubmit={registerUser}>\n                    <div className=\"error\"></div>\n                    <input type=\"text\" id=\"name\"  name=\"name\" placeholder=\"Name\" className=\"inputField\" autoComplete=\"off\" \n                     onChange={handleName}/>\n                    {/* <p className=\"errorMessage\">{formErrors.name}</p> */}\n                    {/* <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" className=\"inputField\" /> */}\n                    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"inputField\" autoComplete=\"off\"\n                     onChange={handleEmail}/>\n                    {/* <p className=\"errorMessage\">{formErrors.email}</p> */}\n                    {/* <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"inputField\" /> */}\n                    <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" className=\"inputField\" autoComplete=\"off\" \n                     onChange={handlePassword}/>\n                    {/* <p className=\"errorMessage\">{formErrors.password}</p> */}\n                    <button  className=\"submitButton\" >Register</button>\n                    {/* <input type=\"submit\" id=\"button\" value=\"Register\"></input> */}\n                    {/* <button class=\"submitButton\">Login as admin</button> */}    \n                    <p><a href=\"/Users/logee/Documents/Codes/miniProject/finance-system/login.html\" className=\"link\">Already Registerd? Login</a></p>\n                    </form>                 \n                </div>\n                </div>\n               \n        </div>\n    );\n}\n\n\n\nexport default Register;\n","/Users/logee/Desktop/fms/src/index.js",[],"/Users/logee/Desktop/fms/src/App.js",[],["88","89"],"/Users/logee/Desktop/fms/src/reportWebVitals.js",[],"/Users/logee/Desktop/fms/src/Home.jsx",[],"/Users/logee/Desktop/fms/src/About.jsx",[],"/Users/logee/Desktop/fms/src/Register.jsx",["90"],"import \"./Login.css\";\nimport {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {toast} from \"react-toastify\";\n\nfunction Register(){\n    //Form Validation\n    // const initialValues = {name : \"\",email : \"\",password : \"\"};\n    // const [formValues, setFormValues] = useState(initialValues);\n    // const [formErrors, setFormErrors] = useState({});\n    // const [isSubmit,setIsSubmit] = useState(false);\n\n    // const handleChange = function(e){\n    //     const {name,value} = e.target;\n    //     setFormValues({...formValues,[name]:value});\n    // };\n    // const handleSubmit = function(e){\n    //     e.preventDefault();\n    //     setFormErrors(validate(formValues));\n    //     setIsSubmit(true);\n    // }\n    // const validate = function(values){\n    //     const errors = {};\n    //     const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    //     if(!values.name){\n    //         errors.name = \"Name is required\";\n    //     }\n    //     if(!values.email){\n    //         errors.email = \"Email is required\";\n    //     }else if(!regex.test(values.email)){\n    //         errors.email = \"Enter a valid email\"\n    //     }\n    //     if(!values.password){\n    //         errors.password = \"Passwrod is required\";\n    //     }else if(values.password.length < 4){\n    //         errors.password = \"Password should be more than 4 characters\"\n    //     }else if(values.password.length > 15){\n    //         errors.password = \"Password cannot exceed more than 15 characters\"\n    //     }\n    //     return errors;\n    // }\n    // useEffect(()=>{\n    //     if(Object.keys(formErrors).length===0&&isSubmit){\n    //         console.log(formValues);    \n    //     }\n    // },[formErrors]);\n    \n    //Authentication \n    const navigate = useNavigate();\n    const [name,setName ] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n\n    const handleName = (e)=>{\n        setName(e.target.value);\n    }\n    const handleEmail = function(e){\n        setEmail(e.target.value);\n    }\n    const handlePassword = function(e){\n        setPassword(e.target.value);\n    }\n    const handleOnclick = function(){\n        navigate(\"/Login\");\n    }\n    async function registerUser(event){\n        event.preventDefault();\n        const response  = await fetch('http://localhost:3001/api/register/',{\n            method:'POST',\n            headers:{\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                name,\n                email,\n                password,\n            }),\n        })\n        const data = await response.json();\n        console.log(data);\n        \n        if(data.status===\"ok\"){\n            // navigate(\"/Login\");\n            toast.success(\"Registered Successfully\");\n        }\n    }\n\n    // const twoCallsName = e => {\n    //     this.handleChange(e);\n    //     this.handleName(e);\n    // }\n\n    // const twoCallsEmail = e => {\n    //     this.handleChange(e);\n    //     this.handleEmail(e);\n    // }\n\n    // const twoCallsPassword = e =>{\n    //     this.handleChange(e);\n    //     this.handlePassword(e);\n    // }\n\n    // const twoCallsSubmit = e =>{\n    //     this.handleSubmit(e);\n    //     this.registerUser(e);\n    // }\n\n\n\n    return(\n        <div className=\"Register\">\n                <div className=\"formContainer\">\n                <h1 className=\"header\" id=\"loginTitle\">REGISTER \n                    <span><span id=\"l1\" >KRISHNA </span>\n                <span id=\"l2\">FINANCE</span></span> </h1>\n                <div className=\"form\">\n                    <br />\n                    <form id=\"form\" onSubmit={registerUser}>\n                    <div className=\"error\"></div>\n                    <input type=\"text\" id=\"name\"  name=\"name\" placeholder=\"Name\" className=\"inputField\" autoComplete=\"off\" \n                     onChange={handleName}/>\n                    {/* <p className=\"errorMessage\">{formErrors.name}</p> */}\n                    {/* <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" className=\"inputField\" /> */}\n                    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"inputField\" autoComplete=\"off\"\n                     onChange={handleEmail}/>\n                    {/* <p className=\"errorMessage\">{formErrors.email}</p> */}\n                    {/* <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"inputField\" /> */}\n                    <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" className=\"inputField\" autoComplete=\"off\" \n                     onChange={handlePassword}/>\n                    {/* <p className=\"errorMessage\">{formErrors.password}</p> */}\n                    <button  className=\"submitButton\" >Register</button>\n                    {/* <input type=\"submit\" id=\"button\" value=\"Register\"></input> */}\n                    {/* <button class=\"submitButton\">Login as admin</button> */}    \n                    <p><a onClick={handleOnclick} className=\"link\">Already Registerd? Login</a></p>\n                    </form>                 \n                </div>\n                </div>\n               \n        </div>\n    );\n}\n\n\n\nexport default Register;\n","/Users/logee/Desktop/fms/src/CustomerDashboard.jsx",["91","92","93","94","95"],"import React from \"react\";\nimport jwt from \"jsonwebtoken\"\nimport {useEffect,useState,useRef} from \"react\";\nimport \"./Login.css\"\n\nimport {toast} from \"react-toastify\";\nimport {Navigate, useNavigate} from \"react-router-dom\";\n// import axios from \"axios\";\n\n\n\nconst CustomerDashboard = (props)=>{\n    // const getBlogPost = ()=>{\n    //     axios.get(\"https://localhost:27017/\")\n    // }\n\n    //Timer\n    const [timerDays,setTimerDays] = useState();\n    const [timerHours,setTimerHours] = useState();\n    const [timerMinutes,setTimerMinutes] = useState();\n    const [timerSeconds,setTimerSeconds] = useState();\n\n    let interval = useRef();\n    let date = 18;\n    const startTimer = () => {\n\n        const countdownDate = new Date(\"Jul \"+date+\", 2022 19:24:00\").getTime();\n        interval = setInterval(() => {\n            const now = new Date().getTime();\n            const distance = countdownDate - now;\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            const hours = Math.floor((distance % (1000 * 60 * 60 *24)/(1000*60*60)));\n            const minutes = Math.floor((distance % (1000 * 60 * 60))/(1000*60));\n            const seconds = Math.floor((distance % (1000 * 60))/1000);\n            if(distance<0){\n                //stop timer\n                clearInterval(interval.current);\n                // sendSMS();\n            }\n            else{\n                //update timer\n                setTimerDays(days);\n                setTimerHours(hours);\n                setTimerMinutes(minutes);\n                setTimerSeconds(seconds);\n            }\n        },1000)\n    }\n\n    useEffect(() => {\n        startTimer();\n        return () => {\n            clearInterval(interval.current);\n        };\n    })\n\n\n\n\n\n\n\n    const [amount,setAmount] = useState(\"\");\n    const [interest,setInterest] = useState(\"\");\n    const [loanID,setLoanID] = useState(\"\");\n\n    const handleAmount = function(e){\n        setAmount(e.target.value);\n    }\n    const handleInterest = function(e){\n        setInterest(e.target.value);\n    }\n    const handleLoanID = function(e){\n        setLoanID(e.target.value);\n    }\n    async function addRecord(event){\n        event.preventDefault();\n        const response = await fetch(\"http://localhost:3001/api/addRecord\",{\n            method:'POST',\n            headers:{\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                loanID,\n                amount,\n                interest\n            }),\n        })\n        const data = await response.json();\n        console.log(data);\n        if(data.status===\"ok\"){\n            console.log(\"stored\");\n            toast.success(\"Record Added successfully\")\n        }\n        else{\n            toast.error(\"Record not added\");\n        }\n    }\n    //send sms\n    async function sendSMS(event){\n        event.preventDefault();\n        const response = await fetch(\"http://localhost:3001/send-sms\");\n        const data = await response.json();\n        console.log(data);\n    }\n    //fetch loan Data\n    async function fetchData(event){\n        event.preventDefault();\n        const response = await fetch(\"http://localhost:3001/api/fetchData\",{\n            method : \"POST\",\n            headers:{\n                \"Content-Type\" : \"application/json\",\n            },\n            body : JSON.stringify({\n                loanID,\n                amount,\n                interest,\n            }),\n        })\n        const data = await response.json();\n        console.log(data); //status : \"ok\"\n        if(data.status===\"ok\"){\n            console.log(\"fetched\");\n        }else{\n            console.log(\"error fetching\")\n        }\n    }\n\n    //delete the record\n    async function deleteRecord(event){\n        event.preventDefault();\n        const response = await fetch(\"http://localhost:3001/api/deleteRecord\",{\n            method : 'POST',\n            headers:{\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                loanID,\n                amount,\n                interest\n            }),\n        })\n        const data = await response.json();\n        console.log(data);\n        if(data.status === \"ok\"){\n            console.log(\"deleted\");\n            toast.success(\"Record deleted successfully\")\n        } else{\n            toast.error(\"Record not deleted\");\n        }\n    }\n\n    //display loan data\n    const navigate = useNavigate();\n    const handleOnClick = () =>{\n        navigate(\"/Records\");\n    }\n\n    // const [loan,setLoan] = useState(\"\")\n    // async function populateLoan(){\n    //     const req = await fetch(\"http://localhost:3001/api/loan\",{\n    //         headers : {\n    //             \"x-access-token\" : localStorage.getItem(\"token\"),\n    //         },\n    //     })\n    //     const data = await req.json()\n    //     if(data.status === \"ok\"){\n    //         setLoan(data.loan);\n    //         console.log(data);\n    //     }\n    //     else{\n    //         alert(data.error);\n    //     }\n    // }\n\n    // useEffect(()=>{\n    //     const token = localStorage.getItem(\"token\");\n    //     if(token){\n    //         const user = jwt.decode(token);\n    //         if(!user){\n    //             localStorage.removeItem(\"token\");\n    //             navigate(\"/Login\");\n    //         }\n    //         else{\n    //             populateLoan();\n    //         }\n    //     }\n    // },[])\n\n\n\n\n    return (\n        <div className=\"CustomerDashboard\">\n            <div className=\"display\">\n\n                <div className=\"formContainerBox\">\n                <h1 className=\"header\" id=\"loginTitle\">ADD RECORD</h1>\n                <div className=\"formBox\">\n                <form id=\"formBox\" onSubmit={addRecord}>\n                    <input type=\"text\" id=\"loanID\"\n                    onChange={handleLoanID}  name=\"loanID\" placeholder=\"LoanID\" className=\"inputField\" autoComplete=\"off\" />\n\n                    <input type=\"text\" id=\"amount\"\n                    onChange={handleAmount} name=\"amount\" placeholder=\"Amount\" className=\"inputField\" autoComplete=\"off\"/>\n\n                    <input type=\"text\" id=\"interest\" \n                    onChange={handleInterest} name=\"interest\" placeholder=\"Interest\" className=\"inputField\" autoComplete=\"off\" />\n\n                    <button  className=\"submitButton\" >Add Loan Record</button>\n                </form> \n                </div>\n                </div>\n                <div className=\"timerRecordBox\">\n                \n                <div className=\"timerBox\" >\n                    <p className=\"timer-text\">Time remaining</p>\n                    <div className=\"timerContainer\">\n                        <div className=\"timers\">\n                            <div className=\"timer\">{timerDays}</div>\n                            <div className=\"duration\">Days</div>\n                        </div>\n                        <div className=\"timers\">\n                            <div className=\"timer\">{timerHours}</div>\n                            <div className=\"duration\">Hours</div>\n                        </div><div className=\"timers\">\n                            <div className=\"timer\">{timerMinutes}</div>\n                            <div className=\"duration\">Mins</div>\n                        </div><div className=\"timers\">\n                            <div className=\"timer\">{timerSeconds}</div>\n                            <div className=\"duration\">Sec</div>\n                    </div>\n                    </div>\n                    \n                </div>\n                <div className=\"recordBox\">\n                    <p className=\"record-text\">No. of Records : {props.data}</p>\n                    <h1>{props.data}</h1>\n                </div>\n                </div>\n                \n                <div className=\"formContainerBox\">\n                <h1 className=\"header\" id=\"loginTitle\">DELETE RECORD</h1>\n                <div className=\"formBox\">\n                <form id=\"formBox\" onSubmit={deleteRecord}>\n                    <input type=\"text\" id=\"loanID\" onChange={handleLoanID}\n                     name=\"loanID\" placeholder=\"LoanID\" className=\"inputField\" autoComplete=\"off\" />\n\n                    <input type=\"text\" id=\"amount\" onChange={handleAmount}\n                     name=\"amount\" placeholder=\"Amount\" className=\"inputField\" autoComplete=\"off\"/>\n\n                    <input type=\"text\"  id=\"intereset\" onChange={handleInterest}\n                     name=\"interest\" placeholder=\"Interest\" className=\"inputField\" autoComplete=\"off\" />\n\n                    <button  className=\"submitButton\" >Delete Loan Record</button>\n                </form> \n               \n                </div>\n                </div>\n                \n                \n\n            </div>\n            <div>\n                <button className=\"submitButton\" onClick={handleOnClick}>Show records</button>\n                {/* <button className=\"submitButton\" onClick={sendSMS}>Send SMS</button> */}\n                {/* <ul>\n                    {loans.map(loans=>(\n                        <li key={loans.id}>{loans.amount}</li>\n                    ))}\n                </ul> */}\n            </div>\n           \n            \n        </div>\n    )\n}\n\nexport default CustomerDashboard;","/Users/logee/Desktop/fms/src/Login.jsx",[],"/Users/logee/Desktop/fms/src/AdminLogin.jsx",[],["96","97"],"/Users/logee/Desktop/fms/src/Records.jsx",[],{"ruleId":"98","severity":1,"message":"99","line":40,"column":7,"nodeType":"100","endLine":40,"endColumn":19,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":18,"nodeType":"104","messageId":"105","endLine":2,"endColumn":27},{"ruleId":"102","severity":1,"message":"106","line":3,"column":9,"nodeType":"104","messageId":"105","endLine":3,"endColumn":19},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":134,"column":24,"nodeType":"113","endLine":134,"endColumn":68},{"ruleId":"102","severity":1,"message":"114","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":11},{"ruleId":"102","severity":1,"message":"115","line":7,"column":9,"nodeType":"104","messageId":"105","endLine":7,"endColumn":17},{"ruleId":"98","severity":1,"message":"116","line":53,"column":36,"nodeType":"104","endLine":53,"endColumn":43},{"ruleId":"102","severity":1,"message":"117","line":100,"column":20,"nodeType":"104","messageId":"105","endLine":100,"endColumn":27},{"ruleId":"102","severity":1,"message":"118","line":107,"column":20,"nodeType":"104","messageId":"105","endLine":107,"endColumn":29},{"ruleId":"107","replacedBy":"119"},{"ruleId":"109","replacedBy":"120"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formValues' and 'isSubmit'. Either include them or remove the dependency array.","ArrayExpression",["121"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'jwt' is defined but never used.","'Navigate' is defined but never used.","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'sendSMS' is defined but never used.","'fetchData' is defined but never used.",["122"],["123"],{"desc":"124","fix":"125"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [formErrors, formValues, isSubmit]",{"range":"126","text":"127"},[1421,1433],"[formErrors, formValues, isSubmit]"]