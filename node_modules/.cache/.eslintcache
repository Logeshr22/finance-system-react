[{"/Users/logee/Documents/Codes/fms/src/index.js":"1","/Users/logee/Documents/Codes/fms/src/App.js":"2","/Users/logee/Documents/Codes/fms/src/reportWebVitals.js":"3","/Users/logee/Documents/Codes/fms/src/Home.jsx":"4","/Users/logee/Documents/Codes/fms/src/Login.jsx":"5","/Users/logee/Documents/Codes/fms/src/About.jsx":"6","/Users/logee/Documents/Codes/fms/src/Register.jsx":"7","/Users/logee/Desktop/fms/src/index.js":"8","/Users/logee/Desktop/fms/src/App.js":"9","/Users/logee/Desktop/fms/src/reportWebVitals.js":"10","/Users/logee/Desktop/fms/src/Home.jsx":"11","/Users/logee/Desktop/fms/src/About.jsx":"12","/Users/logee/Desktop/fms/src/Register.jsx":"13","/Users/logee/Desktop/fms/src/CustomerDashboard.jsx":"14","/Users/logee/Desktop/fms/src/Login.jsx":"15","/Users/logee/Desktop/fms/src/AdminLogin.jsx":"16"},{"size":492,"mtime":1654784221008,"results":"17","hashOfConfig":"18"},{"size":1295,"mtime":1654783477551,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1653482995529,"results":"20","hashOfConfig":"18"},{"size":2230,"mtime":1654877716235,"results":"21","hashOfConfig":"18"},{"size":2630,"mtime":1654971111977,"results":"22","hashOfConfig":"18"},{"size":918,"mtime":1654870553309,"results":"23","hashOfConfig":"18"},{"size":5004,"mtime":1655122007248,"results":"24","hashOfConfig":"18"},{"size":492,"mtime":1655347431609,"results":"25","hashOfConfig":"26"},{"size":1566,"mtime":1656690740742,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1655347431614,"results":"28","hashOfConfig":"26"},{"size":2229,"mtime":1656678881337,"results":"29","hashOfConfig":"26"},{"size":918,"mtime":1655347431553,"results":"30","hashOfConfig":"26"},{"size":5232,"mtime":1657947968836,"results":"31","hashOfConfig":"26"},{"size":8533,"mtime":1658051627063,"results":"32","hashOfConfig":"26"},{"size":3978,"mtime":1657943297774,"results":"33","hashOfConfig":"26"},{"size":0,"mtime":1655347431554,"results":"34","hashOfConfig":"26"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1s8f6sr",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"vhl5is",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"/Users/logee/Documents/Codes/fms/src/index.js",[],[],[],"/Users/logee/Documents/Codes/fms/src/App.js",[],[],"/Users/logee/Documents/Codes/fms/src/reportWebVitals.js",[],[],"/Users/logee/Documents/Codes/fms/src/Home.jsx",[],[],"/Users/logee/Documents/Codes/fms/src/Login.jsx",["80"],[],"import React from \"react\";\nimport \"./Login.css\";\nimport {useState,useEffect} from \"react\";\nfunction Login(){\n    const initialValues = {email : \"\",password : \"\"};\n    const [formValues, setFormValues] = useState(initialValues);\n    const [formErrors, setFormErrors] = useState({});\n    const [isSubmit,setIsSubmit] = useState(false);\n\n    const handleChange = function(e){\n        const {name,value} = e.target;\n        setFormValues({...formValues,[name]:value});\n    };\n    const handleSubmit = function(e){\n        e.preventDefault();\n        setFormErrors(validate(formValues));\n        setIsSubmit(true);\n    }\n    const validate = function(values){\n        const errors = {};\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n        if(!values.email){\n            errors.email = \"Email is required\";\n        }else if(!regex.test(values.email)){\n            errors.email = \"Enter a valid email\"\n        }\n        if(!values.password){\n            errors.password = \"Passwrod is required\";\n        }else if(values.password.length < 4){\n            errors.password = \"Password should be more than 4 characters\"\n        }else if(values.password.length > 15){\n            errors.password = \"Password cannot exceed more than 15 characters\"\n        }\n        return errors;\n    }\n    useEffect(()=>{\n        if(Object.keys(formErrors).length===0&&isSubmit){\n            console.log(formValues);    \n        }\n    },[formErrors]);\n    return(\n        <div className=\"Login\">\n            <div className=\"formContainer\">\n            <h1 className=\"header\" id=\"loginTitle\">CUSTOMER LOGIN <span><span id=\"l1\" >KRISHNA </span>\n                <span id=\"l2\">FINANCE</span></span></h1>\n            <div className=\"form\">\n            <br />\n            <form id=\"form\" onSubmit={handleSubmit}>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" className=\"inputField\" value={formValues.email} onChange={handleChange}/>\n                <p className=\"errorMessage\">{formErrors.email}</p>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"inputField\" value={formValues.password} onChange={handleChange}/>\n                <p className=\"errorMessage\">{formErrors.password}</p>\n                <button className=\"submitButton\">Login</button>\n                {/* <button class=\"submitButton\">Login as admin</button> */}    \n                <p><a href=\"/Users/logee/Documents/Codes/miniProject/finance-system/adminLogin.html\" className=\"link\">Login as admin?</a></p>\n            </form>\n            </div>\n            </div>\n        </div>\n       \n    );\n}\n\n\n\nexport default Login;\n\n\n","/Users/logee/Documents/Codes/fms/src/About.jsx",[],[],"/Users/logee/Documents/Codes/fms/src/Register.jsx",["81","82"],[],"import \"./Login.css\";\nimport {useState,useEffect} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nfunction Register(){\n    //Form Validation\n    // const initialValues = {name : \"\",email : \"\",password : \"\"};\n    // const [formValues, setFormValues] = useState(initialValues);\n    // const [formErrors, setFormErrors] = useState({});\n    // const [isSubmit,setIsSubmit] = useState(false);\n\n    // const handleChange = function(e){\n    //     const {name,value} = e.target;\n    //     setFormValues({...formValues,[name]:value});\n    // };\n    // const handleSubmit = function(e){\n    //     e.preventDefault();\n    //     setFormErrors(validate(formValues));\n    //     setIsSubmit(true);\n    // }\n    // const validate = function(values){\n    //     const errors = {};\n    //     const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    //     if(!values.name){\n    //         errors.name = \"Name is required\";\n    //     }\n    //     if(!values.email){\n    //         errors.email = \"Email is required\";\n    //     }else if(!regex.test(values.email)){\n    //         errors.email = \"Enter a valid email\"\n    //     }\n    //     if(!values.password){\n    //         errors.password = \"Passwrod is required\";\n    //     }else if(values.password.length < 4){\n    //         errors.password = \"Password should be more than 4 characters\"\n    //     }else if(values.password.length > 15){\n    //         errors.password = \"Password cannot exceed more than 15 characters\"\n    //     }\n    //     return errors;\n    // }\n    // useEffect(()=>{\n    //     if(Object.keys(formErrors).length===0&&isSubmit){\n    //         console.log(formValues);    \n    //     }\n    // },[formErrors]);\n    \n    //Authentication \n    const [name,setName ] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n\n    const handleName = (e)=>{\n        setName(e.target.value);\n    }\n    const handleEmail = function(e){\n        setEmail(e.target.value);\n    }\n    const handlePassword = function(e){\n        setPassword(e.target.value);\n    }\n    async function registerUser(event){\n        event.preventDefault();\n        const response  = await fetch('http://localhost:3001/api/register/',{\n            method:'POST',\n            headers:{\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                name,\n                email,\n                password,\n            }),\n        })\n        const data = await response.json();\n        console.log(data);\n    }\n\n    // const twoCallsName = e => {\n    //     this.handleChange(e);\n    //     this.handleName(e);\n    // }\n\n    // const twoCallsEmail = e => {\n    //     this.handleChange(e);\n    //     this.handleEmail(e);\n    // }\n\n    // const twoCallsPassword = e =>{\n    //     this.handleChange(e);\n    //     this.handlePassword(e);\n    // }\n\n    // const twoCallsSubmit = e =>{\n    //     this.handleSubmit(e);\n    //     this.registerUser(e);\n    // }\n\n\n\n    return(\n        <div className=\"Register\">\n                <div className=\"formContainer\">\n                <h1 className=\"header\" id=\"loginTitle\">REGISTER \n                    <span><span id=\"l1\" >KRISHNA </span>\n                <span id=\"l2\">FINANCE</span></span> </h1>\n                <div className=\"form\">\n                    <br />\n                    <form id=\"form\" onSubmit={registerUser}>\n                    <div className=\"error\"></div>\n                    <input type=\"text\" id=\"name\"  name=\"name\" placeholder=\"Name\" className=\"inputField\" autoComplete=\"off\" \n                     onChange={handleName}/>\n                    {/* <p className=\"errorMessage\">{formErrors.name}</p> */}\n                    {/* <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" className=\"inputField\" /> */}\n                    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"inputField\" autoComplete=\"off\"\n                     onChange={handleEmail}/>\n                    {/* <p className=\"errorMessage\">{formErrors.email}</p> */}\n                    {/* <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"inputField\" /> */}\n                    <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" className=\"inputField\" autoComplete=\"off\" \n                     onChange={handlePassword}/>\n                    {/* <p className=\"errorMessage\">{formErrors.password}</p> */}\n                    <button  className=\"submitButton\" >Register</button>\n                    {/* <input type=\"submit\" id=\"button\" value=\"Register\"></input> */}\n                    {/* <button class=\"submitButton\">Login as admin</button> */}    \n                    <p><a href=\"/Users/logee/Documents/Codes/miniProject/finance-system/login.html\" className=\"link\">Already Registerd? Login</a></p>\n                    </form>                 \n                </div>\n                </div>\n               \n        </div>\n    );\n}\n\n\n\nexport default Register;\n","/Users/logee/Desktop/fms/src/index.js",[],["83","84"],"/Users/logee/Desktop/fms/src/App.js",[],"/Users/logee/Desktop/fms/src/reportWebVitals.js",[],"/Users/logee/Desktop/fms/src/Home.jsx",[],"/Users/logee/Desktop/fms/src/About.jsx",[],"/Users/logee/Desktop/fms/src/Register.jsx",["85"],"import \"./Login.css\";\nimport {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {toast} from \"react-toastify\";\n\nfunction Register(){\n    //Form Validation\n    // const initialValues = {name : \"\",email : \"\",password : \"\"};\n    // const [formValues, setFormValues] = useState(initialValues);\n    // const [formErrors, setFormErrors] = useState({});\n    // const [isSubmit,setIsSubmit] = useState(false);\n\n    // const handleChange = function(e){\n    //     const {name,value} = e.target;\n    //     setFormValues({...formValues,[name]:value});\n    // };\n    // const handleSubmit = function(e){\n    //     e.preventDefault();\n    //     setFormErrors(validate(formValues));\n    //     setIsSubmit(true);\n    // }\n    // const validate = function(values){\n    //     const errors = {};\n    //     const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    //     if(!values.name){\n    //         errors.name = \"Name is required\";\n    //     }\n    //     if(!values.email){\n    //         errors.email = \"Email is required\";\n    //     }else if(!regex.test(values.email)){\n    //         errors.email = \"Enter a valid email\"\n    //     }\n    //     if(!values.password){\n    //         errors.password = \"Passwrod is required\";\n    //     }else if(values.password.length < 4){\n    //         errors.password = \"Password should be more than 4 characters\"\n    //     }else if(values.password.length > 15){\n    //         errors.password = \"Password cannot exceed more than 15 characters\"\n    //     }\n    //     return errors;\n    // }\n    // useEffect(()=>{\n    //     if(Object.keys(formErrors).length===0&&isSubmit){\n    //         console.log(formValues);    \n    //     }\n    // },[formErrors]);\n    \n    //Authentication \n    const navigate = useNavigate();\n    const [name,setName ] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n\n    const handleName = (e)=>{\n        setName(e.target.value);\n    }\n    const handleEmail = function(e){\n        setEmail(e.target.value);\n    }\n    const handlePassword = function(e){\n        setPassword(e.target.value);\n    }\n    const handleOnclick = function(){\n        navigate(\"/Login\");\n    }\n    async function registerUser(event){\n        event.preventDefault();\n        const response  = await fetch('http://localhost:3001/api/register/',{\n            method:'POST',\n            headers:{\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                name,\n                email,\n                password,\n            }),\n        })\n        const data = await response.json();\n        console.log(data);\n        \n        if(data.status===\"ok\"){\n            // navigate(\"/Login\");\n            toast.success(\"Registered Successfully\");\n        }\n    }\n\n    // const twoCallsName = e => {\n    //     this.handleChange(e);\n    //     this.handleName(e);\n    // }\n\n    // const twoCallsEmail = e => {\n    //     this.handleChange(e);\n    //     this.handleEmail(e);\n    // }\n\n    // const twoCallsPassword = e =>{\n    //     this.handleChange(e);\n    //     this.handlePassword(e);\n    // }\n\n    // const twoCallsSubmit = e =>{\n    //     this.handleSubmit(e);\n    //     this.registerUser(e);\n    // }\n\n\n\n    return(\n        <div className=\"Register\">\n                <div className=\"formContainer\">\n                <h1 className=\"header\" id=\"loginTitle\">REGISTER \n                    <span><span id=\"l1\" >KRISHNA </span>\n                <span id=\"l2\">FINANCE</span></span> </h1>\n                <div className=\"form\">\n                    <br />\n                    <form id=\"form\" onSubmit={registerUser}>\n                    <div className=\"error\"></div>\n                    <input type=\"text\" id=\"name\"  name=\"name\" placeholder=\"Name\" className=\"inputField\" autoComplete=\"off\" \n                     onChange={handleName}/>\n                    {/* <p className=\"errorMessage\">{formErrors.name}</p> */}\n                    {/* <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" className=\"inputField\" /> */}\n                    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"inputField\" autoComplete=\"off\"\n                     onChange={handleEmail}/>\n                    {/* <p className=\"errorMessage\">{formErrors.email}</p> */}\n                    {/* <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"inputField\" /> */}\n                    <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" className=\"inputField\" autoComplete=\"off\" \n                     onChange={handlePassword}/>\n                    {/* <p className=\"errorMessage\">{formErrors.password}</p> */}\n                    <button  className=\"submitButton\" >Register</button>\n                    {/* <input type=\"submit\" id=\"button\" value=\"Register\"></input> */}\n                    {/* <button class=\"submitButton\">Login as admin</button> */}    \n                    <p><a onClick={handleOnclick} className=\"link\">Already Registerd? Login</a></p>\n                    </form>                 \n                </div>\n                </div>\n               \n        </div>\n    );\n}\n\n\n\nexport default Register;\n","/Users/logee/Desktop/fms/src/CustomerDashboard.jsx",["86","87"],"/Users/logee/Desktop/fms/src/Login.jsx",[],"/Users/logee/Desktop/fms/src/AdminLogin.jsx",[],["88","89"],{"ruleId":"90","severity":1,"message":"91","line":40,"column":7,"nodeType":"92","endLine":40,"endColumn":19,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":18,"nodeType":"96","messageId":"97","endLine":2,"endColumn":27},{"ruleId":"94","severity":1,"message":"98","line":3,"column":9,"nodeType":"96","messageId":"97","endLine":3,"endColumn":19},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":134,"column":24,"nodeType":"105","endLine":134,"endColumn":68},{"ruleId":"90","severity":1,"message":"106","line":49,"column":36,"nodeType":"96","endLine":49,"endColumn":43},{"ruleId":"94","severity":1,"message":"107","line":56,"column":20,"nodeType":"96","messageId":"97","endLine":56,"endColumn":33},{"ruleId":"99","replacedBy":"108"},{"ruleId":"101","replacedBy":"109"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formValues' and 'isSubmit'. Either include them or remove the dependency array.","ArrayExpression",["110"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","'populateQuote' is defined but never used.",["111"],["112"],{"desc":"113","fix":"114"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [formErrors, formValues, isSubmit]",{"range":"115","text":"116"},[1421,1433],"[formErrors, formValues, isSubmit]"]